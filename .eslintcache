[{"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\index.js":"1","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\App.js":"2","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Sidebar\\Sidebar.js":"3","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Create\\CreateHeader.js":"4","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Create\\CreateInputs.js":"5","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\firebase.js":"6","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\store\\store.js":"7","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\features\\userSlice.js":"8","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\SuiteCases.js":"9","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\Header.js":"10","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\Table.js":"11","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\TableHead.js":"12","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\TestCases.js":"13","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Shared\\BackDrop.js":"14","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Shared\\Filter.js":"15","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Shared\\RemoveModal.js":"16","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\CaseItem.js":"17","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Create\\CreateNewTestCase.js":"18","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\Login.js":"19"},{"size":396,"mtime":1661378907244,"results":"20","hashOfConfig":"21"},{"size":1572,"mtime":1661379078020,"results":"22","hashOfConfig":"21"},{"size":2159,"mtime":1661379108348,"results":"23","hashOfConfig":"21"},{"size":1988,"mtime":1661378996004,"results":"24","hashOfConfig":"21"},{"size":2760,"mtime":1661379008606,"results":"25","hashOfConfig":"21"},{"size":510,"mtime":1661211495000,"results":"26","hashOfConfig":"21"},{"size":184,"mtime":1661366983883,"results":"27","hashOfConfig":"21"},{"size":462,"mtime":1661367022834,"results":"28","hashOfConfig":"21"},{"size":989,"mtime":1661378819862,"results":"29","hashOfConfig":"21"},{"size":8701,"mtime":1661378773505,"results":"30","hashOfConfig":"21"},{"size":5038,"mtime":1661378875992,"results":"31","hashOfConfig":"21"},{"size":2209,"mtime":1661378838051,"results":"32","hashOfConfig":"21"},{"size":906,"mtime":1661378850363,"results":"33","hashOfConfig":"21"},{"size":158,"mtime":1661378748520,"results":"34","hashOfConfig":"21"},{"size":4417,"mtime":1661378720098,"results":"35","hashOfConfig":"21"},{"size":365,"mtime":1661378790648,"results":"36","hashOfConfig":"21"},{"size":994,"mtime":1661378891990,"results":"37","hashOfConfig":"21"},{"size":1136,"mtime":1661379021051,"results":"38","hashOfConfig":"21"},{"size":2701,"mtime":1661379138208,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b26pau",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\index.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\App.js",["81"],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Create\\CreateHeader.js",[],["82","83"],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Create\\CreateInputs.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\firebase.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\store\\store.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\features\\userSlice.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\SuiteCases.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\Header.js",["84","85"],"import \"../../CSS/Header.css\";\r\nimport AddOutlinedIcon from \"@mui/icons-material/AddOutlined\";\r\nimport FilterListOutlinedIcon from \"@mui/icons-material/FilterListOutlined\";\r\nimport ClearOutlinedIcon from \"@mui/icons-material/ClearOutlined\";\r\nimport FilterListOffOutlinedIcon from \"@mui/icons-material/FilterListOffOutlined\";\r\nimport { IconButton, TextField, Tooltip } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RemoveModal from \"../Shared/RemoveModal\";\r\nimport BackDrop from \"../Shared/BackDrop\";\r\nimport Filter from \"../Shared/Filter\";\r\nimport { db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Header(props) {\r\n  const [removeModalIsOpen, setRemoveModalIsOpen] = useState(false);\r\n  const [isFilterActive, setIsFilterActive] = useState(false);\r\n  const [areCasesFiltered, setAreCasesFiltered] = useState(false);\r\n  const [isSuiteFilterActive, setIsSuiteFilterActive] = useState(false);\r\n  const [areSuiteCasesFiltered, setAreSuiteCasesFiltered] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const addSelectedToSuite = (e) => {\r\n    props.testCases\r\n      .filter((testCase) => testCase.isChecked)\r\n      .map((testCase) => {\r\n        db.collection('suiteCases')\r\n          .where(\"id\", \"==\", testCase.id)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            if (querySnapshot.size !== 0) {\r\n              return testCase;\r\n            } else {\r\n              db.collection(\"suiteCases\").add({\r\n                id: testCase.id,\r\n                title: testCase.data.title,\r\n                requirement: testCase.data.requirement,\r\n                assignee: testCase.data.assignee,\r\n                run: testCase.data.run,\r\n                status: testCase.data.status,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              });\r\n              \r\n            }\r\n          });\r\n      });\r\n  };\r\n\r\n  const cancelFilterHandler = () => {\r\n    if (props.isSuite) {\r\n      setIsSuiteFilterActive(false);\r\n      setAreSuiteCasesFiltered(false);\r\n    } else {\r\n      setIsFilterActive(false);\r\n      setAreCasesFiltered(false);\r\n    }\r\n\r\n    noFilter();\r\n  };\r\n\r\n  const noFilter = () => {\r\n    if (props.isSuite) {\r\n      db.collection(\"suiteCases\").onSnapshot((snapshot) => {\r\n        props.setSuiteCases(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    } else {\r\n      db.collection(\"testCases\").onSnapshot((snapshot) => {\r\n        props.setTestCases(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  function deleteHandler() {\r\n    setRemoveModalIsOpen(false);\r\n    removeSelectedTestCases();\r\n  }\r\n\r\n  const removeSelectedTestCases = () => {\r\n    if (props.isSuite) {\r\n      props.suiteCases\r\n        .filter((suiteCase) => suiteCase.isChecked)\r\n        .map((suiteCase) => {\r\n          const docRef = db\r\n            .collection(\"suiteCases\")\r\n            .where(\"timestamp\", \"==\", suiteCase.data.timestamp);\r\n          docRef.get().then(function (querySnapshot) {\r\n            querySnapshot.forEach(function (doc) {\r\n              doc.ref.delete();\r\n            });\r\n          });\r\n          return suiteCase;\r\n        });\r\n    } else {\r\n      props.testCases\r\n        .filter((testCase) => testCase.isChecked)\r\n        .map((testCase) => {\r\n          const docRef = db\r\n            .collection(\"testCases\")\r\n            .where(\"timestamp\", \"==\", testCase.data.timestamp);\r\n          docRef.get().then(function (querySnapshot) {\r\n            querySnapshot.forEach(function (doc) {\r\n              doc.ref.delete();\r\n            });\r\n            const suiteDocRef = db\r\n              .collection(\"suiteCases\")\r\n              .where(\"id\", \"==\", testCase.id);\r\n            suiteDocRef.get().then(function (querySnapshot) {\r\n              querySnapshot.forEach(function (doc) {\r\n                doc.ref.delete();\r\n              });\r\n            });\r\n          });\r\n          return testCase;\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (searchTerm === \"\") {\r\n      noFilter();\r\n    } else {\r\n      const end =\r\n        searchTerm.slice(0, searchTerm.length - 1) +\r\n        String.fromCharCode(\r\n          searchTerm\r\n            .slice(searchTerm.length - 1, searchTerm.length)\r\n            .charCodeAt(0) + 1\r\n        );\r\n      if (props.isSuite) {\r\n        db.collection(\"suiteCases\")\r\n          .where(\"title\", \">=\", searchTerm)\r\n          .where(\"title\", \"<\", end)\r\n          .onSnapshot((snapshot) => {\r\n            props.setSuiteCases(\r\n              snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n              }))\r\n            );\r\n          });\r\n      } else {\r\n        db.collection(\"testCases\")\r\n          .where(\"title\", \">=\", searchTerm)\r\n          .where(\"title\", \"<\", end)\r\n          .onSnapshot((snapshot) => {\r\n            props.setTestCases(\r\n              snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n              }))\r\n            );\r\n          });\r\n      }\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"test-cases-header\">\r\n      <div className=\"test-cases-header__left\">\r\n        <h3>{props.isSuite ? \"Suite\" : \"Test Cases\"}</h3>\r\n        <form>\r\n          <TextField\r\n            id=\"search-bar\"\r\n            className=\"text\"\r\n            onInput={(e) => {\r\n              setSearchTerm(e.target.value);\r\n            }}\r\n            label=\"Search...\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Search...\"\r\n            size=\"small\"\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"test-cases-header__right\">\r\n        {((props.isSuite && (isSuiteFilterActive || areSuiteCasesFiltered)) ||\r\n          (!props.isSuite && (isFilterActive || areCasesFiltered))) && (\r\n          <Tooltip title=\"Cancel\" placement=\"bottom\">\r\n            <IconButton onClick={cancelFilterHandler}>\r\n              <FilterListOffOutlinedIcon sx={{ color: \"#863654\" }} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n        {((props.isSuite && isSuiteFilterActive) ||\r\n          (!props.isSuite && isFilterActive)) && (\r\n          <Filter\r\n            isSuite={props.isSuite}\r\n            setCases={props.isSuite ? props.setSuiteCases : props.setTestCases}\r\n            setIsFilterActive={\r\n              props.isSuite ? setIsSuiteFilterActive : setIsFilterActive\r\n            }\r\n            setAreCasesFiltered={\r\n              props.isSuite ? setAreSuiteCasesFiltered : setAreCasesFiltered\r\n            }\r\n          />\r\n        )}\r\n        {((props.isSuite && !isSuiteFilterActive && !areSuiteCasesFiltered) ||\r\n          (!props.isSuite && !isFilterActive && !areCasesFiltered)) && (\r\n          <Tooltip title=\"Filter\" placement=\"bottom\">\r\n            <IconButton\r\n              onClick={() => {\r\n                props.isSuite\r\n                  ? setIsSuiteFilterActive(true)\r\n                  : setIsFilterActive(true);\r\n              }}\r\n            >\r\n              <FilterListOutlinedIcon sx={{ color: \"#863654\" }} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n        {!props.isSuite && !props.isSomeChecked && (\r\n          <Tooltip title=\"New\" placement=\"bottom\">\r\n            <Link to=\"/create\">\r\n              <IconButton>\r\n                <AddOutlinedIcon sx={{ color: \"#863654\" }} />\r\n              </IconButton>\r\n            </Link>\r\n          </Tooltip>\r\n        )}\r\n        {!props.isSuite && props.isSomeChecked && (\r\n          <Tooltip title=\"Add to Suite\" placement=\"bottom\">\r\n            <IconButton onClick={addSelectedToSuite}>\r\n              <AddOutlinedIcon sx={{ color: \"#863654\" }} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n        {((props.isSuite &&\r\n          (props.isSomeSuiteChecked || props.isAllSuiteChecked)) ||\r\n          (!props.isSuite && (props.isSomeChecked || props.isAllChecked))) && (\r\n          <Tooltip title=\"Remove\" placement=\"bottom\">\r\n            <IconButton onClick={() => setRemoveModalIsOpen(true)}>\r\n              <ClearOutlinedIcon sx={{ color: \"#863654\" }} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n      {removeModalIsOpen && (\r\n        <RemoveModal\r\n          onCancel={() => setRemoveModalIsOpen(false)}\r\n          onDelete={deleteHandler}\r\n        />\r\n      )}\r\n      {removeModalIsOpen && (\r\n        <BackDrop onClick={() => setRemoveModalIsOpen(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\Table.js",["86","87","88","89","90"],"import { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport TableHead from \"../Tests/TableHead\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport CaseItem from \"../Tests/CaseItem\";\r\n\r\nfunction Table(props) {\r\n  const headClickHandler = () => {\r\n    if (props.isSuite) {\r\n      props.setIsAllSuiteChecked(!props.isAllSuiteChecked);\r\n      setAllItemsCheck(!props.isAllSuiteChecked);\r\n    } else {\r\n      props.setIsAllChecked(!props.isAllChecked);\r\n      setAllItemsCheck(!props.isAllChecked);\r\n    }\r\n  };\r\n\r\n  const setAllItemsCheck = (e) => {\r\n    if (props.isSuite) {\r\n      props.setSuiteCases(\r\n        props.suiteCases.map((t) => ({ ...t, isChecked: e }))\r\n      );\r\n    } else {\r\n      props.setTestCases(props.testCases.map((t) => ({ ...t, isChecked: e })));\r\n    }\r\n  };\r\n\r\n  const onChecked = (id) => {\r\n    if (props.isSuite) {\r\n      props.setSuiteCases(\r\n        props.suiteCases.map((e) => {\r\n          if (e.id === id) {\r\n            return { ...e, isChecked: !e.isChecked };\r\n          } else {\r\n            return e;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      props.setTestCases(\r\n        props.testCases.map((e) => {\r\n          if (e.id === id) {\r\n            return { ...e, isChecked: !e.isChecked };\r\n          } else {\r\n            return e;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!props.isSuite) {\r\n      let checkedCasesAmount = props.testCases.filter(\r\n        (e) => e.isChecked\r\n      ).length;\r\n      let casesAmount = props.testCases.length;\r\n      props.setIsSomeChecked(\r\n        checkedCasesAmount !== 0 && checkedCasesAmount < casesAmount\r\n      );\r\n      props.setIsAllChecked(\r\n        checkedCasesAmount === casesAmount && casesAmount !== 0\r\n      );\r\n    }\r\n  }, [props.testCases]);\r\n\r\n  useEffect(() => {\r\n    if (props.isSuite) {\r\n      let checkedCasesAmount = props.suiteCases.filter(\r\n        (e) => e.isChecked\r\n      ).length;\r\n      let casesAmount = props.suiteCases.length;\r\n      props.setIsSomeSuiteChecked(\r\n        checkedCasesAmount !== 0 && checkedCasesAmount < casesAmount\r\n      );\r\n      props.setIsAllSuiteChecked(\r\n        checkedCasesAmount === casesAmount && casesAmount !== 0\r\n      );\r\n    }\r\n  }, [props.suiteCases]);\r\n\r\n  useEffect(() => {\r\n    if (!props.isSuite) {\r\n      db.collection(\"testCases\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          props.setTestCases(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                data: doc.data(),\r\n                isChecked: false,\r\n              };\r\n            })\r\n          )\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.isSuite) {\r\n      db.collection(\"suiteCases\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          props.setSuiteCases(\r\n            snapshot.docs.map((doc) => {\r\n              return {\r\n                id: doc.id,\r\n                data: doc.data(),\r\n                isChecked: false,\r\n              };\r\n            })\r\n          )\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"testCases\">\r\n      {props.isSuite ? (\r\n        <TableHead\r\n          isSuite={props.isSuite}\r\n          headClickHandler={headClickHandler}\r\n          isAllSuiteChecked={props.isAllSuiteChecked}\r\n          isSomeSuiteChecked={props.isSomeSuiteChecked}\r\n          setSuiteCases={props.setSuiteCases}\r\n        />\r\n      ) : (\r\n        <TableHead\r\n          isSuite={props.isSuite}\r\n          headClickHandler={headClickHandler}\r\n          isAllChecked={props.isAllChecked}\r\n          isSomeChecked={props.isSomeChecked}\r\n          setTestCases={props.setTestCases}\r\n        />\r\n      )}\r\n      <FlipMove>\r\n        {props.isSuite\r\n          ? props.suiteCases.map(\r\n              ({\r\n                id,\r\n                data: { title, requirement, assignee, run, status },\r\n                isChecked,\r\n              }) => (\r\n                <CaseItem\r\n                  id={id}\r\n                  key={id}\r\n                  title={title}\r\n                  requirement={requirement}\r\n                  assignee={assignee}\r\n                  run={run}\r\n                  status={status}\r\n                  isChecked={isChecked}\r\n                  onChecked={onChecked}\r\n                />\r\n              )\r\n            )\r\n          : props.testCases.map(\r\n              ({\r\n                id,\r\n                data: { title, requirement, assignee, run, status },\r\n                isChecked,\r\n              }) => (\r\n                <CaseItem\r\n                  id={id}\r\n                  key={id}\r\n                  title={title}\r\n                  requirement={requirement}\r\n                  assignee={assignee}\r\n                  run={run}\r\n                  status={status}\r\n                  isChecked={isChecked}\r\n                  onChecked={onChecked}\r\n                />\r\n              )\r\n            )}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\TableHead.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\TestCases.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Shared\\BackDrop.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Shared\\Filter.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Shared\\RemoveModal.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Tests\\CaseItem.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\components\\Create\\CreateNewTestCase.js",[],"C:\\Users\\liora\\Downloads\\AudioCodes\\AudioCodes\\src\\Login.js",[],{"ruleId":"91","severity":1,"message":"92","line":34,"column":6,"nodeType":"93","endLine":34,"endColumn":8,"suggestions":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":26,"column":23,"nodeType":"101","messageId":"102","endLine":26,"endColumn":25},{"ruleId":"91","severity":1,"message":"103","line":164,"column":6,"nodeType":"93","endLine":164,"endColumn":18,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":21,"nodeType":"107","messageId":"108","endLine":1,"endColumn":29},{"ruleId":"91","severity":1,"message":"109","line":65,"column":6,"nodeType":"93","endLine":65,"endColumn":23,"suggestions":"110"},{"ruleId":"91","severity":1,"message":"109","line":80,"column":6,"nodeType":"93","endLine":80,"endColumn":24,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"109","line":98,"column":6,"nodeType":"93","endLine":98,"endColumn":8,"suggestions":"112"},{"ruleId":"91","severity":1,"message":"109","line":116,"column":6,"nodeType":"93","endLine":116,"endColumn":8,"suggestions":"113"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'noFilter' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["117"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["118"],["119"],["120"],["121"],{"desc":"122","fix":"123"},"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},"Update the dependencies array to be: [noFilter, props, searchTerm]",{"range":"135","text":"136"},"Update the dependencies array to be: [props, props.testCases]",{"range":"137","text":"138"},"Update the dependencies array to be: [props, props.suiteCases]",{"range":"139","text":"140"},"Update the dependencies array to be: [props]",{"range":"141","text":"142"},{"range":"143","text":"142"},[1037,1039],"[dispatch]",[5272,5284],"[noFilter, props, searchTerm]",[1784,1801],"[props, props.testCases]",[2244,2262],"[props, props.suiteCases]",[2690,2692],"[props]",[3121,3123]]